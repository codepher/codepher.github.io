{"title":"golang grpc","uid":"07723b3eccecbafa4111980c975f8316","slug":"notes/golang/golang grpc","date":"2021-04-21T16:00:00.000Z","updated":"2021-04-22T08:53:48.928Z","comments":true,"path":"api/articles/notes/golang/golang grpc.json","keywords":null,"cover":null,"content":"<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><p>1.从github上下载protobuf3</p>\n<p><a href=\"https://github.com/protocolbuffers/protobuf/releases/\" target=\"_blank\" rel=\"noopener\">protobuf3下载地址</a></p>\n<p>有很多语言版本的，mac下选择第一个。</p>\n<p>2.下载下来后解压压缩包，并进入目录</p>\n<pre><code>cd protobuf-3.7.0/</code></pre><p>3.设置编译目录</p>\n<pre><code>./configure --prefix=/usr/local/protobuf</code></pre><p>4.切换到root用户</p>\n<pre><code>sudo -i</code></pre><p>5.安装</p>\n<pre><code>make\nmake install</code></pre><p>6.配置环境变量</p>\n<p>找到用户目录/Users/pauljiang 的 .bash_profile文件并编辑</p>\n<pre><code>vim .bash_profile</code></pre><p>按一下回车键</p>\n<p>按i进入编辑模式</p>\n<p>添加</p>\n<pre><code>export PROTOBUF=/usr/local/protobuf \nexport PATH=$PROTOBUF/bin:$PATH</code></pre><p>source一下使文件生效</p>\n<pre><code>source .bash_profile</code></pre><p>7.测试安装结果</p>\n<pre><code class=\"shell\">protoc --version</code></pre>\n<h2 id=\"生成中间文件\"><a href=\"#生成中间文件\" class=\"headerlink\" title=\"生成中间文件\"></a>生成中间文件</h2><pre><code>protoc --go_out=../services Prod.proto</code></pre><pre><code>protoc --go_out=plugins=grpc:../service Prod.proto</code></pre><h3 id=\"openssl-生成证书\"><a href=\"#openssl-生成证书\" class=\"headerlink\" title=\"openssl 生成证书\"></a>openssl 生成证书</h3><pre><code>#生成\nopenssl genrsa -aes128 -out fd.key 2048\n\n openssl req -new -key fd.key -out fd.csr\n\n#删除密码\nopenssl rsa -in fd.key  -out fd-public.key\n\n\nopenssl x509 -req -days 365 -in fd.csr -signkey fd.key -out fd.crt</code></pre>","text":"安装1.从github上下载protobuf3 protobuf3下载地址 有很多语言版本的，mac下选择第一个。 2.下载下来后解压压缩包，并进入目录 cd protobuf-3.7.0/3.设置编译目录 ./configure --prefix=/usr/local/prot...","link":"","photos":[],"count_time":{"symbolsCount":713,"symbolsTime":"1 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">安装</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%94%9F%E6%88%90%E4%B8%AD%E9%97%B4%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">生成中间文件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#openssl-%E7%94%9F%E6%88%90%E8%AF%81%E4%B9%A6\"><span class=\"toc-text\">openssl 生成证书</span></a>","author":{"name":"codepher","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"dtls config","uid":"3346a6d7769e51eb6fa14e4e3e7e03e2","slug":"notes/dtls config","date":"2021-05-05T16:00:00.000Z","updated":"2021-05-06T02:23:27.939Z","comments":true,"path":"api/articles/notes/dtls config.json","keywords":null,"cover":null,"text":"// Config is used to configure a DTLS client or server. // After a Config is passed to a DTLS function it must not be modified. type Config ...","link":"","photos":[],"count_time":{"symbolsCount":"5.2k","symbolsTime":"5 mins."},"categories":[],"tags":[],"author":{"name":"codepher","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"golang json","uid":"fef725bdbcfa07cb10d1927a39560ef0","slug":"notes/golang/golang json","date":"2021-04-16T16:00:00.000Z","updated":"2021-04-16T16:43:20.686Z","comments":true,"path":"api/articles/notes/golang/golang json.json","keywords":null,"cover":null,"text":"jsonstruct &gt; json json.Marshal() json &gt; interface{} json.Unmarshal() tag type Persion struct{ Name string `json:&quot;-&quot;` //忽略 Na...","link":"","photos":[],"count_time":{"symbolsCount":345,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"codepher","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}