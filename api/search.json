[{"id":"f73a8e23e6f6f669cf99c7dba8fa0722","title":"","content":"cron表达式\n┌─────────────second 范围 (0 - 60)\n│ ┌───────────── min (0 - 59)\n│ │ ┌────────────── hour (0 - 23)\n│ │ │ ┌─────────────── day of month (1 - 31)\n│ │ │ │ ┌──────────────── month (1 - 12)\n│ │ │ │ │ ┌───────────────── day of week (0 - 6) (0 to 6 are Sunday\n│ │ │ │ │ │                  to Saturday)\n│ │ │ │ │ │\n│ │ │ │ │ │\n* * * * * *\n\n匹配符号\n\n星号(*) :表示 cron 表达式能匹配该字段的所有值。如在第5个字段使用星号(month)，表示每个月\n斜线(/):表示增长间隔，如第2个字段(minutes) 值是 3-59/15，表示每小时的第3分钟开始执行一次，之后 每隔 15 分钟执行一次（即 3（3+0*15）、18（3+1*15）、33（3+2*15）、48（3+3*15） 这些时间点执行），这里也可以表示为：3/15\n逗号(,):用于枚举值，如第6个字段值是 MON,WED,FRI，表示 星期一、三、五 执行\n连字号(-):表示一个范围，如第3个字段的值为 9-17 表示 9am 到 5pm 直接每个小时（包括9和17）\n问号(?):只用于 日(Day of month) 和 星期(Day of week)，表示不指定值，可以用于代替 *\n\nexample\n&quot;0 0 0 1 * *&quot; // 表示每个月1号的00:00:00\n &quot;0 1 1 1 * *&quot; // 表示每个月1号的01:01:00\n每隔5秒执行一次：&quot;*/5 * * * * ?&quot; 或 &quot;*/5 * * * * *&quot; \n每隔1分钟执行一次：&quot;0 */1 * * * ?&quot; \n每天23点执行一次：&quot;0 0 23 * * ?&quot; \n每天凌晨1点执行一次：&quot;0 0 1 * * ?&quot; \n每月1号凌晨1点执行一次：&quot;0 0 1 1 * ?&quot; \n在26分、29分、33分执行一次：&quot;0 26,29,33 * * * ?&quot; \n每天的0点、13点、18点、21点都执行一次：&quot;0 0 0,13,18,21 * * ?&quot;\n","slug":"notes/cron表达式","date":"2022-04-19T11:18:03.143Z","categories_index":"","tags_index":"","author_index":"codepher"},{"id":"9c598956ee37f40f5bb9a1316c0fabcb","title":"centos7 国内源","content":"清华大学yum源参考地址：https://mirrors.tuna.tsinghua.edu.cn/help/centos/\n网易yum源参考地址：http://mirrors.163.com/.help/centos.html\nyum -y install wget\nrm -rf /etc/yum.repo.d/*\nwget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.163.com/.help/CentOS7-Base-163.repo\nyum clean all &amp;&amp; yum makecache\n\n\n\n\n\n\n\n\n\n\n或者： \nyum -y install yum-utils\nyum-config-manager --add-repo http://mirrors.163.com/.help/CentOS7-Base-163.repo\nmv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo_bak\nmv /etc/yum.repos.d/CentOS7-Base-163.repo /etc/yum.repos.d/CentOS-Base.repo\nyum clean all &amp;&amp; yum makecache\nyum repolist\n\n\n阿里云yum源yum -y install yum-utils\nyum-config-manager --add-repo http://mirrors.aliyun.com/repo/Centos-7.repo\nmv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo_bak\nmv /etc/yum.repos.d/Centos-7.repo /etc/yum.repos.d/CentOS-Base.repo\nyum clean all &amp;&amp; yum makecache &amp;&amp; yum repolist\n\n中科大yum源yum -y install wget\nrm -rf /etc/yum.repos.d/*\nwget -O /etc/yum.repos.d/CentOS-Base.repo 'https://lug.ustc.edu.cn/wiki/_export/code/mirrors/help/centos?codeblock=3'\nyum clean all &amp;&amp; yum makecache\n\n\n上海交大yum源vim /etc/yum.repos.d/CentOS-Base.repo \n\n[base]\nname=CentOS-7- Base\nbaseurl=http://ftp.sjtu.edu.cn/centos/$releasever/os/$basearch/\ngpgcheck=1\ngpgkey= http://ftp.sjtu.edu.cn/centos/RPM-GPG-KEY-CentOS-7\n\n[update]\nname=CentOS-7 - Updates\nbaseurl= http://ftp.sjtu.edu.cn/centos/$releasever/updates/$basearch/\ngpgcheck=1\ngpgkey= http://ftp.sjtu.edu.cn/centos/RPM-GPG-KEY-CentOS-7\n\n[extras]\nname=CentOS-7 - Extras\nbaseurl= http://ftp.sjtu.edu.cn/centos/$releasever/extras/$basearch/\ngpgcheck=1\ngpgkey= http://ftp.sjtu.edu.cn/centos/RPM-GPG-KEY-CentOS-7\n\n[centosplus]\nname=CentOS-7 - Plus\nbaseurl= http://ftp.sjtu.edu.cn/centos/$releasever/centosplus/$basearch/\ngpgcheck=1\nenabled=0\ngpgkey= http://ftp.sjtu.edu.cn/centos/RPM-GPG-KEY-CentOS-7\n\n\n搜狐yum源\nvim /etc/yum.repos.d/CentOS-Base.repo \n\n[base]\nname=CentOS-7 - Base\nbaseurl=http://mirrors.sohu.com/centos/$releasever/os/$basearch/\ngpgcheck=1\ngpgkey= http://mirrors.sohu.com/centos/RPM-GPG-KEY-CentOS-7\n\n[update]\nname=CentOS-7 - Updates\nbaseurl= http://mirrors.sohu.com/centos/$releasever/updates/$basearch/\ngpgcheck=1\ngpgkey= http://mirrors.sohu.com/centos/RPM-GPG-KEY-CentOS-7\n\n[extras]\nname=CentOS-7 - Extras\nbaseurl= http://mirrors.sohu.com/centos/$releasever/extras/$basearch/\ngpgcheck=1\ngpgkey= http://mirrors.sohu.com/centos/RPM-GPG-KEY-CentOS-7\n\n[centosplus]\nname=CentOS-7 - Plus\nbaseurl= http://mirrors.sohu.com/centos/$releasever/centosplus/$basearch/\ngpgcheck=1\nenabled=0\ngpgkey= http://mirrors.sohu.com/centos/RPM-GPG-KEY-CentOS-7\n\n\n其它yum源北京理工大学： http://mirror.bit.edu.cn 参考地址\n兰州大学：http://mirror.lzu.edu.cn\n厦门大学：http://mirrors.xmu.edu.cn\n中国科学技术大学：http://mirrors.ustc.edu.cn\n东北大学：http://mirror.neu.edu.cn\n官方yum源CentOS官方：http://mirror.centos.org/\n","slug":"notes/cnetos7 国内源","date":"2021-10-10T16:00:00.000Z","categories_index":"","tags_index":"","author_index":"codepher"},{"id":"b5a611129c6bd38856b3318868ddd757","title":"golang 交叉编译","content":"Mac 下编译 Linux 和 Windows 64位可执行程序\nCGO_ENABLED&#x3D;0 GOOS&#x3D;linux GOARCH&#x3D;amd64 go build main.go\nCGO_ENABLED&#x3D;0 GOOS&#x3D;windows GOARCH&#x3D;amd64 go build main.go\nLinux 下编译 Mac 和 Windows 64位可执行程序\nCGO_ENABLED&#x3D;0 GOOS&#x3D;darwin GOARCH&#x3D;amd64 go build main.go\nCGO_ENABLED&#x3D;0 GOOS&#x3D;windows GOARCH&#x3D;amd64 go build main.go\nWindows 下编译 Mac 和 Linux 64位可执行程序\nSET CGO_ENABLED&#x3D;0\nSET GOOS&#x3D;darwin\nSET GOARCH&#x3D;amd64\ngo build main.go\n\nSET CGO_ENABLED&#x3D;0\nSET GOOS&#x3D;linux\nSET GOARCH&#x3D;amd64\ngo build main.go\nGOOS：目标平台的操作系统（darwin、freebsd、linux、windows）GOARCH：目标平台的体系架构（386、amd64、arm）交叉编译不支持 CGO 所以要禁用它\n上面的命令编译 64 位可执行程序，你当然应该也会使用 386 编译 32 位可执行程序\n","slug":"notes/golang/golang 交叉编译","date":"2019-10-15T16:00:00.000Z","categories_index":"基础,golang","tags_index":"golang","author_index":"codepher"},{"id":"5a29705902bce64d4aaff9113e9d622a","title":"树莓派默认登陆密码","content":"树莓派默认密码\n默认用户是 pi 密码为 raspberry\n\n","slug":"notes/raspberryPi/树莓派默认登录密码","date":"2021-06-25T16:00:00.000Z","categories_index":"树莓派","tags_index":"树莓派","author_index":"codepher"},{"id":"22f3a2b9f9860ff96fb05d7f1cc9a954","title":"linux 慢网速","content":"sudo tc qdisc add dev ens33 root netem delay 500ms       #设置500ms的延迟\nsudo tc qdisc add dev ens33 root netem loss 50%          #设置50%的丢包率\nsudo tc qdisc add dev ens33 root netem delay 300ms  loss 50% \nsudo tc qdisc del dev ens33 root\n","slug":"notes/Linux 慢网速","date":"2021-06-11T16:00:00.000Z","categories_index":"","tags_index":"","author_index":"codepher"},{"id":"3346a6d7769e51eb6fa14e4e3e7e03e2","title":"dtls config","content":"// Config is used to configure a DTLS client or server.\n// After a Config is passed to a DTLS function it must not be modified.\ntype Config struct {\n    // Certificates contains certificate chain to present to the other side of the connection.\n    // Server MUST set this if PSK is non-nil\n    // client SHOULD sets this so CertificateRequests can be handled if PSK is non-nil\n    // 证书\n    Certificates []tls.Certificate\n\n    // CipherSuites is a list of supported cipher suites.\n    // If CipherSuites is nil, a default list is used\n    // 加密算法 加密字典\n    CipherSuites []CipherSuiteID\n\n    // CustomCipherSuites is a list of CipherSuites that can be\n    // provided by the user. This allow users to user Ciphers that are reserved\n    // for private usage.\n    // \n    CustomCipherSuites func() []CipherSuite\n\n    // SignatureSchemes contains the signature and hash schemes that the peer requests to verify.\n    SignatureSchemes []tls.SignatureScheme\n\n    // SRTPProtectionProfiles are the supported protection profiles\n    // Clients will send this via use_srtp and assert that the server properly responds\n    // Servers will assert that clients send one of these profiles and will respond as needed\n    SRTPProtectionProfiles []SRTPProtectionProfile\n\n    // ClientAuth determines the server&#39;s policy for\n    // TLS Client Authentication. The default is NoClientCert.\n    ClientAuth ClientAuthType\n\n    // RequireExtendedMasterSecret determines if the &quot;Extended Master Secret&quot; extension\n    // should be disabled, requested, or required (default requested).\n    // 加密扩展类型 \n    ExtendedMasterSecret ExtendedMasterSecretType\n\n    // FlightInterval controls how often we send outbound handshake messages\n    // defaults to time.Second\n    FlightInterval time.Duration\n\n    // PSK sets the pre-shared key used by this DTLS connection\n    // If PSK is non-nil only PSK CipherSuites will be used\n    PSK             PSKCallback\n    PSKIdentityHint []byte\n\n    // InsecureSkipVerify controls whether a client verifies the\n    // server&#39;s certificate chain and host name.\n    // If InsecureSkipVerify is true, TLS accepts any certificate\n    // presented by the server and any host name in that certificate.\n    // In this mode, TLS is susceptible to man-in-the-middle attacks.\n    // This should be used only for testing.\n    InsecureSkipVerify bool\n\n    // InsecureHashes allows the use of hashing algorithms that are known\n    // to be vulnerable.\n    InsecureHashes bool\n\n    // VerifyPeerCertificate, if not nil, is called after normal\n    // certificate verification by either a client or server. It\n    // receives the certificate provided by the peer and also a flag\n    // that tells if normal verification has succeedded. If it returns a\n    // non-nil error, the handshake is aborted and that error results.\n    //\n    // If normal verification fails then the handshake will abort before\n    // considering this callback. If normal verification is disabled by\n    // setting InsecureSkipVerify, or (for a server) when ClientAuth is\n    // RequestClientCert or RequireAnyClientCert, then this callback will\n    // be considered but the verifiedChains will always be nil.\n    VerifyPeerCertificate func(rawCerts [][]byte, verifiedChains [][]*x509.Certificate) error\n\n    // RootCAs defines the set of root certificate authorities\n    // that one peer uses when verifying the other peer&#39;s certificates.\n    // If RootCAs is nil, TLS uses the host&#39;s root CA set.\n    // ca根证书\n    RootCAs *x509.CertPool\n\n    // ClientCAs defines the set of root certificate authorities\n    // that servers use if required to verify a client certificate\n    // by the policy in ClientAuth.\n    ClientCAs *x509.CertPool\n\n    // ServerName is used to verify the hostname on the returned\n    // certificates unless InsecureSkipVerify is given.\n    ServerName string\n\n    LoggerFactory logging.LoggerFactory\n\n    // ConnectContextMaker is a function to make a context used in Dial(),\n    // Client(), Server(), and Accept(). If nil, the default ConnectContextMaker\n    // is used. It can be implemented as following.\n    //\n    //     func ConnectContextMaker() (context.Context, func()) {\n    //         return context.WithTimeout(context.Background(), 30*time.Second)\n    //     }\n    ConnectContextMaker func() (context.Context, func())\n\n    // MTU is the length at which handshake messages will be fragmented to\n    // fit within the maximum transmission unit (default is 1200 bytes)\n    MTU int\n\n    // ReplayProtectionWindow is the size of the replay attack protection window.\n    // Duplication of the sequence number is checked in this window size.\n    // Packet with sequence number older than this value compared to the latest\n    // accepted packet will be discarded. (default is 64)\n    ReplayProtectionWindow int\n\n    // KeyLogWriter optionally specifies a destination for TLS master secrets\n    // in NSS key log format that can be used to allow external programs\n    // such as Wireshark to decrypt TLS connections.\n    // See https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/Key_Log_Format.\n    // Use of KeyLogWriter compromises security and should only be\n    // used for debugging.\n    KeyLogWriter io.Writer\n}\n\n","slug":"notes/dtls config","date":"2021-05-05T16:00:00.000Z","categories_index":"","tags_index":"","author_index":"codepher"},{"id":"07723b3eccecbafa4111980c975f8316","title":"golang grpc","content":"安装1.从github上下载protobuf3\nprotobuf3下载地址\n有很多语言版本的，mac下选择第一个。\n2.下载下来后解压压缩包，并进入目录\ncd protobuf-3.7.0/3.设置编译目录\n./configure --prefix=/usr/local/protobuf4.切换到root用户\nsudo -i5.安装\nmake\nmake install6.配置环境变量\n找到用户目录/Users/pauljiang 的 .bash_profile文件并编辑\nvim .bash_profile按一下回车键\n按i进入编辑模式\n添加\nexport PROTOBUF=/usr/local/protobuf \nexport PATH=$PROTOBUF/bin:$PATHsource一下使文件生效\nsource .bash_profile7.测试安装结果\nprotoc --version\n生成中间文件protoc --go_out=../services Prod.protoprotoc --go_out=plugins=grpc:../service Prod.protoopenssl 生成证书#生成\nopenssl genrsa -aes128 -out fd.key 2048\n\n openssl req -new -key fd.key -out fd.csr\n\n#删除密码\nopenssl rsa -in fd.key  -out fd-public.key\n\n\nopenssl x509 -req -days 365 -in fd.csr -signkey fd.key -out fd.crt","slug":"notes/golang/golang grpc","date":"2021-04-21T16:00:00.000Z","categories_index":"","tags_index":"","author_index":"codepher"},{"id":"fef725bdbcfa07cb10d1927a39560ef0","title":"golang json","content":"jsonstruct &gt; json\njson.Marshal()\n\njson &gt; interface{}\njson.Unmarshal()\n\ntag\n\ntype Persion struct{\n    Name string `json:&quot;-&quot;` //忽略\n    Name string `json:&quot;name&quot;`// 转成json的字段值\n    Name string `json:&quot;name,omitempty&quot;` // omitempty 空值/零值时会省略不转换\n    Name string `json:&quot;,omitempty&quot;` //使用字段名作为json名，并且会跳过零值\n}\n","slug":"notes/golang/golang json","date":"2021-04-16T16:00:00.000Z","categories_index":"","tags_index":"","author_index":"codepher"},{"id":"2c3a451d05719ccf753049f1599af879","title":"golang 三色标记法","content":"","slug":"notes/golang/golang 三色标记法","date":"2021-04-16T16:00:00.000Z","categories_index":"","tags_index":"","author_index":"codepher"},{"id":"d26748d96534f511b1d6155a2f2aab74","title":"golang MPG","content":"MPG\nM 指 Machine,一个 M 关联一个内核线程 由操作系统管理。\n\n数量问题：Go语言本身限定 M 的上限是1000，或在 runtime/debug 包中的 SetMaxThreads() 设置。\n\n\nM 动态创建，有一个 M 阻塞（goroutine）,会创建新的 M。如果有M空闲，会回收或眨眼\n\n\n\nP 指 处理器(Processor), 代表了 M 所需的上下文环境，也是处理用户级代码逻辑的处理器。负责衔接 M 和 G 的上下文调度，将等待执行的 G 与 M 对接。\n\n数量问题: 环境变量 $GOMAXPROCS，或在程序中通过 runtime.GOMAXPROCS(runtime.NumCPU())设置。\n\n\n\nG 指 Goroutine，本质是一种轻量级的线程。包括了调用栈，重要的调度信息，如 channel 等。\n\n创建 goroutine 栈内存消耗 2kb，运行过程中内存不够会自动扩容\n\n\n所有协程都是同级的，不分父子关系。\n\n\n","slug":"notes/golang/golang MPG","date":"2021-04-12T16:00:00.000Z","categories_index":"golang","tags_index":"golang","author_index":"codepher"},{"id":"138df3425b55dda1eb168080b56fe768","title":"vue 指令","content":"\nv-for : 循环渲染\n\nv-if : \n\nv-html : \n\nv-on : 注册事件\n\n简写: @\n支持指令修饰符\n@click.prevent 禁止默认事件\n@click.stop 禁止冒泡\n\n\n\n\nv-bind : 绑定动态属性\n\n简写: :\n\n\nv-show : \n\nv-model : 双向绑定\n\nv-slot :\n\nv-text :\n\nv-pre :\n\nv-cloak :\n\nv-once :\n\nv-key :  - \n\n\n","slug":"notes/vue/vue 指令","date":"2021-01-15T16:00:00.000Z","categories_index":"vue","tags_index":"vue","author_index":"codepher"},{"id":"e0bfc6ccc71ddcb1343e338862529ef0","title":"vue 属性","content":"","slug":"notes/vue/vue 属性","date":"2021-01-15T16:00:00.000Z","categories_index":"vue","tags_index":"vue","author_index":"codepher"},{"id":"95a2cc497f0071c2a95877f437febbe9","title":"acme.sh 安装ssl证书","content":"\n查看已申请列表\nacme.sh --list\n申请证书\nacme.sh --issue -d www.your-app.com -w &#x2F;home&#x2F;ubuntu&#x2F;www&#x2F;your-app&#x2F;current&#x2F;public\n\n移动证书\nacme.sh --installcert -d www.your-app.com \\\n               --keypath       &#x2F;home&#x2F;ubuntu&#x2F;www&#x2F;ssl&#x2F;www.your-app.com.key  \\\n               --fullchainpath &#x2F;home&#x2F;ubuntu&#x2F;www&#x2F;ssl&#x2F;www.your-app.com.key.pem \\\n               --reloadcmd     &quot;sudo service nginx force-reload&quot;\nnginx 单独设置项目目录\n适合反向代理的项目 或者 不想侵入项目目录的情况\nlocation &#x2F;.well-known&#x2F;  &#123;\n       root &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;portainer\n       index index.html;\n   &#125;\n\n\n","slug":"notes/acme.sh 安装ssl证书","date":"2020-09-14T16:00:00.000Z","categories_index":"","tags_index":"","author_index":"codepher"},{"id":"4476e5d0c57d101b5ea66017054d94e3","title":"docker php 安装扩展","content":"进入容器 docker exec -it php /bin/bash\n\n至目录下 cd /usr/local/bin  \n\n安装扩展 ./docker-php-ext-install pdo_mysql  \n\n安装扩展 ./docker-php-ext-install mysql\n\n重启容器 docker php restart\n","slug":"notes/docker php 安装扩展","date":"2020-09-14T16:00:00.000Z","categories_index":"","tags_index":"","author_index":"codepher"},{"id":"f09237cb0d479f49002bcc31d39df114","title":"nginx 部分配置","content":"\n转至https\nserver {\n  listen  80;\n  server_name host;\n  rewrite ^(.*)$ https://${server_name}$1 permanent;\n}\nphp5.6\nlocation ~ \\.php$ {\n          # 设置监听端口\n          fastcgi_pass   127.0.0.1:9056;\n          # 设置nginx的默认首页文件(上面已经设置过了，可以删除)\n          fastcgi_index  index.php;\n          # 设置脚本文件请求的路径\n          fastcgi_param  SCRIPT_FILENAME  /www/dir/$fastcgi_script_name;\n          #fastcgi_param  SCRIPT_NAME     $fastcgi_script_name;\n          # 引入fastcgi的配置文件\n          include        fastcgi_params;\n      }\n\n","slug":"notes/nginx 部分配置","date":"2020-09-14T16:00:00.000Z","categories_index":"","tags_index":"","author_index":"codepher"},{"id":"c4b49421678335898bba750d40c7be0a","title":"通过docker安装多版本PHP","content":"\nphp\ndocker run -p 9072:9000 --name  php72-fpm -v &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html:&#x2F;www -v $PWD&#x2F;conf&#x2F;php72:&#x2F;usr&#x2F;local&#x2F;etc&#x2F;php -v &#x2F;var&#x2F;log&#x2F;php72:&#x2F;phplogs   -d php:7.2-fpm\n\ndocker run -p 9056:9000 --name  php56-fpm -v &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html:&#x2F;www -d php:5.6-fpm\nnginx\nserver &#123;\n        listen       80;\n        server_name  php72.codepher.com;\n\n        # 默认网站根目录（www目录）\n        root         &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html;\n\n        # Load configuration files for the default server block.\n        #include &#x2F;etc&#x2F;nginx&#x2F;default.d&#x2F;*.conf;\n\n        location &#x2F; &#123;\n            # 这里改动了 定义首页索引文件的名称\n            index index.php index.html index.htm;\n        &#125;\n\n        error_page 404 &#x2F;404.html;\n            location &#x3D; &#x2F;40x.html &#123;\n        &#125;\n\n        error_page 500 502 503 504 &#x2F;50x.html;\n            location &#x3D; &#x2F;50x.html &#123;\n        &#125;\n\n        # 这里新加的\n        # PHP 脚本请求全部转发到 FastCGI处理. 使用FastCGI协议默认配置.\n        # Fastcgi服务器和程序(PHP,Python)沟通的协议.\n        location ~ \\.php$ &#123;\n            # 设置监听端口\n            fastcgi_pass   127.0.0.1:9072;\n            # 设置nginx的默认首页文件(上面已经设置过了，可以删除)\n            fastcgi_index  index.php;\n            # 设置脚本文件请求的路径\n            fastcgi_param  SCRIPT_FILENAME &#x2F;www&#x2F;$fastcgi_script_name;\n            # 引入fastcgi的配置文件\n            include        fastcgi_params;\n        &#125;\n    &#125;\n\nportainer\nupstream portainer &#123;\n      server 127.0.0.1:9000;\n&#125;\n\nserver&#123;\n    listen 80;\n    server_name  portainer.backend.codepher.com;\n\n    # access_log  logs&#x2F;portainer.backend.codepher.com.access.log  main;\n    # error_log  logs&#x2F;portainer.backend.codepher.com.error.log;\n    # root   html;\n    index  index.html;\n\n    location &#x2F;.well-known&#x2F;  &#123;\n        root &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;portainer\n        index index.html;\n    &#125;\n    \n    #Proxy Settings\n    proxy_redirect     off;\n    proxy_set_header   Host             $host;\n    proxy_set_header   X-Real-IP        $remote_addr;\n    proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;\n    proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;\n    proxy_max_temp_file_size 0;\n    proxy_connect_timeout      90;\n    proxy_send_timeout         90;\n    proxy_read_timeout         90;\n    proxy_buffer_size          4k;\n    proxy_buffers              4 32k;\n    proxy_busy_buffers_size    64k;\n    proxy_temp_file_write_size 64k;\n\n    ## send request ##\n    location &#x2F; &#123;\n        proxy_pass  http:&#x2F;&#x2F;portainer;\n   &#125;\n\nmysql\nsudo docker run -p 3306:3306 --name mysql -e MYSQL_ROOT_PASSWORD&#x3D;123456 -d mysql:5.6\n\n","slug":"notes/通过docker安装多版本PHP","date":"2020-09-14T16:00:00.000Z","categories_index":"","tags_index":"","author_index":"codepher"},{"id":"f73a8e23e6f6f669cf99c7dba8fa0722","title":"","content":"\nForbidden path outside the build context: ../dist/ ()\n禁止\n\n","slug":"notes/docker","date":"2020-02-18T09:15:54.236Z","categories_index":"","tags_index":"","author_index":"codepher"},{"id":"131bef674f903a9f3f35b6c9c6bf8274","title":"Mac 终端命令整理","content":"\nctrl-z 挂起正在运行的进程\n\nctrl-d 发送EOF\n\nctrl-c 结束进程\n\njobs 显示当前暂停的进程\n\nbg 使进程后台运行\n\nfg 使进程恢复前台运行\nssh-copy-id user@host\n\n\n","slug":"notes/Mac 终端命令整理","date":"2020-02-11T16:00:00.000Z","categories_index":"基础","tags_index":"Mac","author_index":"codepher"},{"id":"67b998ca17f2f84ffc9f8907bdfa2b3c","title":"Redis 基础","content":"\nredis-cli\nflushdb 清空数据库数据\nflushall 清空全部数据库数据\nselect 切换数据库 0~15\nstring \nSET key value []\nGET key\nDEL \n\n\n\n","slug":"notes/redis/Redis 基础","date":"2019-11-06T16:00:00.000Z","categories_index":"基础,Redis","tags_index":"Redis","author_index":"codepher"},{"id":"cd2563c48a87d924d7af12868e800dc4","title":"LeetCode 669 修剪二叉搜索树","content":"题目描述\n给定一个二叉搜索树，同时给定最小边界L 和最大边界 R。通过修剪二叉搜索树，使得所有节点的值在[L, R]中 (R&gt;=L) 。你可能需要改变树的根节点，所以结果应当返回修剪好的二叉搜索树的新的根节点。\n\n拓展\n二叉搜索树的性质： 若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值； 若它的右子树不空，则右子树上所有结点的值均大于它的根结点的值\n\n代码实现/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     public $val = null;\n *     public $left = null;\n *     public $right = null;\n *     function __construct($value) { $this-&gt;val = $value; }\n * }\n */\nclass Solution {\n\n    /**\n     * @param TreeNode $root\n     * @param Integer $L\n     * @param Integer $R\n     * @return TreeNode\n     */\n    function trimBST($root, $L, $R) {\n        if($root-&gt;val === null){\n            return null;\n        }\n        if($root-&gt;val &gt; $R){\n            return $this-&gt;trimBST($root-&gt;left,$L,$R);\n        }\n        if($root-&gt;val &lt; $L){\n            return $this-&gt;trimBST($root-&gt;right,$L,$R);\n        }\n        $root-&gt;left = $this-&gt;trimBST($root-&gt;left,$L,$R);\n        $root-&gt;right = $this-&gt;trimBST($root-&gt;right,$L,$R);\n        return $root;\n    }\n}\n","slug":"notes/算法/LeetCode #669 修剪二叉搜索树","date":"2019-11-04T16:00:00.000Z","categories_index":"算法,LeetCode","tags_index":"LeetCode","author_index":"codepher"},{"id":"3ed9223697ebe2dfa7d4b387cfd110d1","title":"LeetCode 965 单值二叉树","content":"题目描述\n如果二叉树每个节点都具有相同的值，那么该二叉树就是单值二叉树。只有给定的树是单值二叉树时，才返回 true；否则返回 false。\n\n代码实现PHP&lt;?php\n/**\n * 如果二叉树每个节点都具有相同的值，那么该二叉树就是单值二叉树。\n * 只有给定的树是单值二叉树时，才返回 true；否则返回 false。\n * Definition for a binary tree node.\n * class TreeNode {\n *     public $val = null;\n *     public $left = null;\n *     public $right = null;\n *     function __construct($value) { $this-&gt;val = $value; }\n * }\n */\nclass Solution {\n\n    /**\n     * @param TreeNode $root\n     * @return Boolean\n     */\n    function isUnivalTree($root) {\n        if($root ==  null){\n            return true;\n        }\n\n        if(($root-&gt;left !== null &amp;&amp; $root-&gt;val != $root-&gt;left-&gt;val)\n            ||($root-&gt;right !== null &amp;&amp; $root-&gt;val != $root-&gt;right-&gt;val)){\n            return false;\n        }\n\n        if($this-&gt;isUnivalTree($root-&gt;left) === false|| $this-&gt;isUnivalTree($root-&gt;right) === false){\n            return false;\n        }\n        return true;\n    }\n}\nGolang/**\n * Definition for a binary tree node.\n * type TreeNode struct {\n *     Val int\n *     Left *TreeNode\n *     Right *TreeNode\n * }\n */\nfunc isUnivalTree(root *TreeNode) bool {\n    if(root == nil){\n        return true\n    }\n\n    if((root.Left != nil &amp;&amp; root.Val != root.Left.Val) || (root.Right != nil &amp;&amp; root.Val != root.Right.Val)){\n        return false\n    }\n\n    if(isUnivalTree(root.Left) == false || false == isUnivalTree(root.Right)){\n        return false\n    }\n    return true\n}\n","slug":"notes/算法/LeetCode #965 单值二叉树","date":"2019-11-01T16:00:00.000Z","categories_index":"算法,LeetCode","tags_index":"LeetCode","author_index":"codepher"},{"id":"606613c3ba561758929d001ca1458370","title":"CentOs 中安装Chrome+ChromeDriver","content":"安装Chrome1.安装Chromecurl https://intoli.com/install-google-chrome.sh | bash2.测试浏览器google-chrome-stable --no-sandbox --headless --disable-gpu --screenshot https://www.baidu.com/\n会保存一张图片在当前路径\n\n安装ChromeDriver查看Chrome版本google-chrome --version查找对应的驱动的网址\nhttp://chromedriver.storage.googleapis.com/index.html*下载安装包wget http://chromedriver.storage.googleapis.com/78.0.3904.70/chromedriver_linux64.zip解压# 没有 unzip 使用 yum 安装即可\nunzip chromedriver_linux64.zip\n\n\n解压完成后可将可执行文件移到bin目录方便后续使用mv chromedriver /usr/bin/\n","slug":"notes/CentOs 中安装Chrome+ChromeDriver","date":"2019-10-27T16:00:00.000Z","categories_index":"","tags_index":"","author_index":"codepher"},{"id":"8c4475e6cda787cfe9b16640a3d99286","title":"Linux screen","content":"screen⌘\nCommand（或 Cmd）⌘Shift ⇧Option（或 Alt）⌥Control（或 Ctrl）⌃Caps Lock ⇪Fn\n","slug":"notes/linux/Linux screen","date":"2019-09-05T16:00:00.000Z","categories_index":"基础,Linux","tags_index":"Linux","author_index":"codepher"},{"id":"8417d9036e3872df9227d7a1e4cba020","title":"go mod","content":"go mod 命令go mod tidy\n拉取缺少的模块，移除不用的模块。\ngo mod vendor\n将依赖复制到vendor下。\ngo mod download\n下载依赖包。\ngo mod verify\n检验依赖。\ngo mod graph\n打印模块依赖图。\n","slug":"notes/golang/go mod","date":"2019-09-02T16:00:00.000Z","categories_index":"基础,golang","tags_index":"golang","author_index":"codepher"},{"id":"5fc88cbcc357146595fffd7d4a3c8a7d","title":"Linux ls","content":"ls 命令\n-ls 就能看到在当前目录下所有文件和子目录的列表。\n\nls 命令选项\n\n\n\n选项\n长选项\n描述\n\n\n\n-a\n–all\n列出所有文件，甚至包括文件名以圆点开头的默认会被隐藏的隐藏文件。\n\n\n-d\n–directory\n通常，如果指定了目录名，ls 命令会列出这个目录中的内容，而不是目录本身。 把这个选项与 -l 选项结合使用，可以看到所指定目录的详细信息，而不是目录中的内容。\n\n\n-F\n–classify\n这个选项会在每个所列出的名字后面加上一个指示符。例如，如果名字是 目录名，则会加上一个’/‘字符。\n\n\n-h\n–human-readable\n当以长格式列出时，以人们可读的格式，而不是以字节数来显示文件的大小。\n\n\n-l\n-\n以长格式显示结果。\n\n\n-r\n–reverse\n以相反的顺序来显示结果。通常，ls 命令的输出结果按照字母升序排列。\n\n\n-S\n-\n命令输出结果按照文件大小来排序。\n\n\n-t\n-\n按照修改时间来排序。\n\n\nls -l[root@iZ28jjwy44gZ ~]# ls -l\n总用量 8976\ndrwxr-xr-x  6 root root     4096 6月  19 07:16 blog\ndrwxr-xr-x  2 root root     4096 1月  26 2019 certbot\ndrwxr-xr-x  6 root root     4096 5月  31 12:07 compose\ndrwxr-xr-x  3 root root     4096 1月  30 2019 goproduct\ndrwxr-xr-x  4 root root     4096 1月  26 2019 logs\ndrwxr-xr-x  5 root root     4096 2月  13 2019 nginx\ndrwxr-xr-x  9 1001  1001    4096 1月  30 2019 nginx-1.15.8\n-rw-r--r--  1 root root  1027862 12月 25 2018 nginx-1.15.8.tar.gz\ndrwxr-xr-x 18 root root     4096 1月  30 2019 openssl-1.1.0j\n-rw-r--r--  1 root root  5411919 11月 20 2018 openssl-1.1.0j.tar.gz\ndrwxr-xr-x  9 1169  1169   12288 1月  30 2019 pcre-8.42\n-rw-r--r--  1 root root  2081413 4月   2 2018 pcre-8.42.tar.gz\ndrwxr-xr-x  2 root root     4096 6月  24 14:32 php\ndrwxr-xr-x 14  501 games    4096 1月  30 2019 zlib-1.2.11\n-rw-r--r--  1 root root   607698 1月  16 2017 zlib-1.2.11.tar.gz\n\n\ndrwxr-xr-x\n6\nroot\nroot\n4096\n6月  19 07:16\nblog\n\n\n\n对于文件的访问权限\n文件的硬链接数目\n文件所有者的用户名\n文件所属用户组的名字\n以字节数表示的文件大小\n上次修改文件的时间和日期\n文件名\n\n\n","slug":"notes/linux/Linux ls","date":"2019-09-02T16:00:00.000Z","categories_index":"基础,Linux","tags_index":"Linux","author_index":"codepher"},{"id":"6ba63ac590c83016178942183a156cfe","title":"高数一-函数","content":"函数集合定义\n具有某种确定性质的对象的全体集合成为一个 集合\n\n\n组成集合的个别对象成为该集合的 元素\n\n表示\n一般用大写 ABC 等表示集合\n用小写 abc 等表示集合的元素\n不含任何元素的集合叫做空集 用 ∅ 表示\na ∈ A 表示 a 是 A 中的元素\na ∉ A 表示 a 不是 A 中的元素\nA = { x | x 具有性质 P(x)}\n例：A = { x | x &gt; 0, x ∈ R}\n\n\n\n特殊数集\nN 自然数集\n自然数由0开始，一个接一个，即用数码0，1，2，3，4……所表示的数。\n\n\nZ 整数集\n由全体整数组成的集合叫整数集。它包括全体正整数、全体负整数和零\n\n\nQ 有理数集\n有理数集，即由所有有理数所构成的集合。\n\n有理数集是实数集的子集，即 Q ∈ R \n有理数集是一个无穷集，不存在最大值或最小值。\n\nR 实数集\n实数集通俗地认为，通常包含所有有理数和无理数的集合就是实数集，通常用大写字母R表示\n\n\n\n集合运算 设 A，B 为两个集合\n\n若 ∀x(任意X) ∈ A,必有 x ∈ B。则 A ⊆ B ( A 包含于 B)\n若 A ⊆ B， 且 B ⊆ A。则 A = B\n并集：A ∪ B = { x | x ∈ A 或 x ∈ B }\n交集：A ∩ B = { x | x ∈ A 且 x ∈ B }\n子集：子集是一个数学概念：如果集合 A 的任意一个元素都是集合 B 的元素，那么集合 A 称为集合 B 的子集。\n符号语言：若 ∀a ∈ A，均有 a ∈ B，则 A ⊆ B\n差集：A \\ B = { x | x ∈ A 且 x ∉ B}\n余集：若 X 为全集或基本集，\nA 的余集(符号不知道怎么打) = X \\ A = { x | x ∈ X 但 x ∉ A}\n\n\n\n\n集合的运算法则\n设 A，B，C 为三个集合，则有\n\n交换律:A ∪ B = B ∪ A,  A ∩ B = B ∩ A\n结合律:(A ∪ B) ∪ C = A ∪ (B ∪ C)\n(A ∩ B) ∩ C = A ∩ (B ∩ C)\n分配率(A ∪ B) ∩ C = (A ∩ C) ∪ (B ∩ C)\n(A ∩ B) ∪ C = (A ∪ C) ∩ (B ∪ C)\n\n\n\n","slug":"notes/高数一-函数","date":"2019-08-25T16:00:00.000Z","categories_index":"","tags_index":"math","author_index":"codepher"},{"id":"40ce963d74b16b9ad78f3ad85541e829","title":"无头浏览器-Chrome","content":"简介很久都没有搞Python了，最近想去爬取一个网站，发现网站内容是用js生成的，然后就想到了用无头浏览器去处理，之前了解的都是PhantomJS，但是在网上查阅了一些资料后得知PhantomJS停止维护了，而且新版的selenium好像不支持PhantomJS了，需要使用 Chrome 或者 Firefox。\n因为我平时用的浏览器就是 Chrome，最后决定用 Chrome 的无头模式来做。\n\n准备\n需要通过pip安装 selenium 模块 \n提前安装好 Chrome \n最后还需要下载一个Chrome的驱动才能使用，下载的时候需要根据本地 Chrome 的版本，下载对应的驱动。\n下载完 Chromedriver 后我是把 Chromedriver 这个驱动放到了环境变量里。这样方便写代码调用。\n\n\n## \n","slug":"notes/无头浏览器-Chrome","date":"2019-07-25T16:00:00.000Z","categories_index":"","tags_index":"","author_index":"codepher"}]