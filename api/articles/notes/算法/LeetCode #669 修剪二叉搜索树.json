{"title":"LeetCode 669 修剪二叉搜索树","uid":"cd2563c48a87d924d7af12868e800dc4","slug":"notes/算法/LeetCode #669 修剪二叉搜索树","date":"2019-11-04T16:00:00.000Z","updated":"2021-04-15T17:05:26.344Z","comments":true,"path":"api/articles/notes/算法/LeetCode #669 修剪二叉搜索树.json","keywords":null,"cover":null,"content":"<h1 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h1><blockquote>\n<p>给定一个二叉搜索树，同时给定最小边界L 和最大边界 R。通过修剪二叉搜索树，使得所有节点的值在[L, R]中 (R&gt;=L) 。你可能需要改变树的根节点，所以结果应当返回修剪好的二叉搜索树的新的根节点。</p>\n</blockquote>\n<h1 id=\"拓展\"><a href=\"#拓展\" class=\"headerlink\" title=\"拓展\"></a>拓展</h1><blockquote>\n<p>二叉搜索树的性质： 若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值； 若它的右子树不空，则右子树上所有结点的值均大于它的根结点的值</p>\n</blockquote>\n<h1 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h1><pre><code class=\"php\">/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     public $val = null;\n *     public $left = null;\n *     public $right = null;\n *     function __construct($value) { $this-&gt;val = $value; }\n * }\n */\nclass Solution {\n\n    /**\n     * @param TreeNode $root\n     * @param Integer $L\n     * @param Integer $R\n     * @return TreeNode\n     */\n    function trimBST($root, $L, $R) {\n        if($root-&gt;val === null){\n            return null;\n        }\n        if($root-&gt;val &gt; $R){\n            return $this-&gt;trimBST($root-&gt;left,$L,$R);\n        }\n        if($root-&gt;val &lt; $L){\n            return $this-&gt;trimBST($root-&gt;right,$L,$R);\n        }\n        $root-&gt;left = $this-&gt;trimBST($root-&gt;left,$L,$R);\n        $root-&gt;right = $this-&gt;trimBST($root-&gt;right,$L,$R);\n        return $root;\n    }\n}</code></pre>\n","text":"题目描述 给定一个二叉搜索树，同时给定最小边界L 和最大边界 R。通过修剪二叉搜索树，使得所有节点的值在[L, R]中 (R&gt;=L) 。你可能需要改变树的根节点，所以结果应当返回修剪好的二叉搜索树的新的根节点。 拓展 二叉搜索树的性质： 若它的左子树不空，则左子树上所有结点...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":2,"path":"api/categories/算法.json"},{"name":"LeetCode","slug":"算法/LeetCode","count":2,"path":"api/categories/算法/LeetCode.json"}],"tags":[{"name":"LeetCode","slug":"LeetCode","count":2,"path":"api/tags/LeetCode.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0\"><span class=\"toc-text\">题目描述</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%8B%93%E5%B1%95\"><span class=\"toc-text\">拓展</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">代码实现</span></a></li></ol>","author":{"name":"codepher","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Redis 基础","uid":"67b998ca17f2f84ffc9f8907bdfa2b3c","slug":"notes/redis/Redis 基础","date":"2019-11-06T16:00:00.000Z","updated":"2021-04-15T17:05:50.617Z","comments":true,"path":"api/articles/notes/redis/Redis 基础.json","keywords":null,"cover":null,"text":" redis-cli flushdb 清空数据库数据 flushall 清空全部数据库数据 select 切换数据库 0~15 string SET key value [] GET key DEL ","link":"","photos":[],"count_time":{"symbolsCount":105,"symbolsTime":"1 mins."},"categories":[{"name":"基础","slug":"基础","count":6,"path":"api/categories/基础.json"},{"name":"Redis","slug":"基础/Redis","count":1,"path":"api/categories/基础/Redis.json"}],"tags":[{"name":"Redis","slug":"Redis","count":1,"path":"api/tags/Redis.json"}],"author":{"name":"codepher","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"LeetCode 965 单值二叉树","uid":"3ed9223697ebe2dfa7d4b387cfd110d1","slug":"notes/算法/LeetCode #965 单值二叉树","date":"2019-11-01T16:00:00.000Z","updated":"2021-04-15T17:05:26.463Z","comments":true,"path":"api/articles/notes/算法/LeetCode #965 单值二叉树.json","keywords":null,"cover":null,"text":"题目描述 如果二叉树每个节点都具有相同的值，那么该二叉树就是单值二叉树。只有给定的树是单值二叉树时，才返回 true；否则返回 false。 代码实现PHP&lt;?php /** * 如果二叉树每个节点都具有相同的值，那么该二叉树就是单值二叉树。 * 只有给定的树是单值二叉树时...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":2,"path":"api/categories/算法.json"},{"name":"LeetCode","slug":"算法/LeetCode","count":2,"path":"api/categories/算法/LeetCode.json"}],"tags":[{"name":"LeetCode","slug":"LeetCode","count":2,"path":"api/tags/LeetCode.json"}],"author":{"name":"codepher","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}